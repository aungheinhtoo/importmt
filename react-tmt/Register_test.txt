Registration test case (Accessor)

{
            "user_id" : "S1234567Q",
            "user_name" : "test",
            "user_password" : "password123",
            "is_accessor" : "true",
            "accessor" : "null",
            "user_email": "aqwer@qwewqe.com"
}



Login test
{
            "user_id" : "S1234567Q",
            "user_password" : "password123"

}

Login Reply



Registration test case (User)

{
            "user_id" : "S7654321Q",
            "user_name" : "usertest",
            "user_password" : "password123",
            "is_accessor" : "false",
            "accessor" : "test",
            "user_email": "user@email.com"
}

 Login Reply:"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjoiUzc2NTQzMjFRIiwiaWF0IjoxNTk5OTA1MTc3LCJleHAiOjE1OTk5MDg3Nzd9.cvz5z--BEXUcnnv765sZbGNSIpLeKbqeRbjioW-1z6w"


GET userattempts/id
Steps:
1. Login to get user token (valid 1 hour)
2. Empty request body
3. header=> token : token_val (have quotes also nvm)
4. Response body =>
[{"attempt_no":2,"attempted_on":"2020-09-12T18:17:43.000Z","time_taken":20,"accuracy":25,"difficulty":false,"pass_fail":true}]


POST userattempts
Steps:
1. Login to get user token (valid 1 hour)
2. Add body JSON
3. header=> token : token_val (have quotes also nvm)
4. Response body = "Attempt successfully added!"

User Attempt JSON
{
    "user_id" : "S7654321Q",
    "time_taken" : 20,
    "accuracy" : 25,
    "difficulty": false,
    "pass_fail": true
}

